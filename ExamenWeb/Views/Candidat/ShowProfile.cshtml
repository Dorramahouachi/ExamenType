@model ExamenWeb.Models.CandidatModels

@{
    ViewBag.Title = "Profile";
    Layout = "";
}


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>One Page Resume</title>
    <style type="text/css">
        * {
            margin: 0;
            padding: 0;
        }

        body {
            font: 16px Helvetica, Sans-Serif;
            line-height: 24px;
            background: url(images/noise.jpg);
        }

        .clear {
            clear: both;
        }

        #page-wrap {
            width: 800px;
            margin: 40px auto 60px;
        }

        #pic {
            float: right;
            margin: -30px 0 0 0;
            border-radius: 50%;
            width: 200px;
            height: 200px;
            background-image: url("../../Content/Upload/");
        }

        h1 {
            margin: 0 0 16px 0;
            padding: 0 0 16px 0;
            font-size: 42px;
            font-weight: bold;
            letter-spacing: -2px;
            border-bottom: 1px solid #999;
        }

        h2 {
            font-size: 20px;
            margin: 0 0 6px 0;
            position: relative;
        }

            h2 span {
                position: absolute;
                bottom: 0;
                right: 0;
                font-style: italic;
                font-family: Georgia, Serif;
                font-size: 16px;
                color: #999;
                font-weight: normal;
            }

        p {
            margin: 0 0 16px 0;
        }

        a {
            color: #999;
            text-decoration: none;
            border-bottom: 1px dotted #999;
        }

            a:hover {
                border-bottom-style: solid;
                color: black;
            }

        ul {
            margin: 0 0 32px 17px;
        }

        #objective {
            width: 500px;
            float: left;
        }

            #objective p {
                font-family: Georgia, Serif;
                font-style: italic;
                color: #666;
            }

        dt {
            font-style: italic;
            font-weight: bold;
            font-size: 18px;
            text-align: right;
            padding: 0 26px 0 0;
            width: 150px;
            float: left;
            height: 100px;
            border-right: 1px solid #999;
        }

        dd {
            width: 600px;
            float: right;
        }

            dd.clear {
                float: none;
                margin: 0;
                height: 15px;
            }
    </style>
</head>

@using (Html.BeginForm("ShowProfile", "Candidat", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <body>
        <div id="page-wrap">
            <div id="pic">
                @{ string path = "~/Content/Upload/" + Model.picture;}
                <img src="@Url.Content(path)" alt="Photo of Cthulu" id="pic" />
                <div class="form-inline">
                    <div class="editor-field">
                        Upload a new profil picture
                        @Html.TextBox("file", "", new { type = "file" })
                        @Html.ValidationMessageFor(model => model.picture)
                    </div>
                </div>

            </div>

            <div id="contact-info" class="vcard">

                <!-- Microformats! -->

                <h1 class="fn">Please complete your profil</h1>

                <p>
                    Login: <span class="tel">
                        @Html.DisplayFor(model => model.login, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    </span><br />
                    Email: <a class="email">
                        @Html.DisplayFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    </a><br />
                    Password: <a class="email">
                        @Html.DisplayFor(model => model.password, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    </a><br />
                    Name: <span>
                        @Html.EditorFor(model => model.name)
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </span>
                    Lastname: <span>
                        @Html.EditorFor(model => model.lastname)
                        @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                    </span><br />
                    Cell: <span class="tel">
                        @Html.EditorFor(model => model.phoneContact)
                        @Html.ValidationMessageFor(model => model.phoneContact, "", new { @class = "text-danger" })
                    </span>
                    Birthdate: <span>
                        @Html.EditorFor(model => model.birthDate)
                        @Html.ValidationMessageFor(model => model.birthDate, "", new { @class = "text-danger" })
                    </span>
                </p>
            </div>
            <div class="clear"></div>

            <dl>
                <dd class="clear"></dd>

                <dt>@Html.LabelFor(model => model.bio)</dt>
                <dd>
                    @Html.TextAreaFor(model => model.bio)
                    @Html.ValidationMessageFor(model => model.bio, "")
                </dd>

                <dd class="clear"></dd>

                <dt>@Html.LabelFor(model => model.Skills)</dt>
                <dd>
                    @Html.TextAreaFor(model => model.Skills)
                    @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
                </dd>

                <dd class="clear"></dd>

                <dt> @Html.LabelFor(model => model.experience)  </dt>
                <dd>
                    @Html.TextAreaFor(model => model.experience)
                    @Html.ValidationMessageFor(model => model.experience, "", new { @class = "text-danger" })
                </dd>

                <dd class="clear"></dd>

                <dt>  @Html.LabelFor(model => model.actualPost) </dt>
                <dd>
                    @Html.TextAreaFor(model => model.actualPost)
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </dd>

                <dd class="clear"></dd>

                <dt>@Html.LabelFor(model => model.address)</dt>
                <dd>@Html.TextAreaFor(model => model.address)</dd>

                <dd class="clear"></dd>
                <dt>@Html.LabelFor(model => model.Country)</dt>
                <dd>@Html.TextAreaFor(model => model.Country)</dd>

                <dd class="clear"></dd>
            </dl>

            <div class="clear"></div>
            <div class="form-inline">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </body>


    

    @Html.HiddenFor(model => model.UserId)
}


</html>     